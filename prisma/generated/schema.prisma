// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRESQL_URL")
}

model User {
  id       String    @id @default(uuid(4))
  name     String
  email    String    @unique
  password String
  role     UserRole  @default(user)
  bookings Booking[]

  @@map("users")
}

enum UserRole {
  admin
  user
}

// Тестовое задание
// Котельников Иван Романович
// Backend NodeJS Developer
model Event {
  id         String    @id @default(uuid(4))
  name       String
  totalSeats Int       @map("total_seats")
  bookings   Booking[]

  @@map("events")
}

model Booking {
  id        String   @id @default(uuid(4))
  eventId   String   @map("event_id")
  userId    String   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")

  event Event @relation(fields: [eventId], references: [id], onDelete: Cascade)
  user  User  @relation(fields: [userId], references: [id])

  @@unique([eventId, userId])
  @@map("bookings")
}
